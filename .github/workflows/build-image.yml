name: Build Image
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:

    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install -y coreutils p7zip-full qemu-user-static

    - name: Checkout CustomPiOS
      uses: actions/checkout@v2
      with:
        repository: 'guysoft/CustomPiOS'
        ref: devel
        path: CustomPiOS

    - name: Checkout Project Repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        path: repository

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Build React frontend
      run: pushd repository/admin-client/ && npm i -y && npm run build && popd

    - name: Download Raspbian Image
      run: cd repository/os/image && wget -q -c --trust-server-names 'https://downloads.raspberrypi.org/raspbian_lite_latest'

    - name: Update CustomPiOS Paths
      run: cd repository/os && ../../CustomPiOS/src/update-custompios-paths

    - name: Copy FeederNet to CustomPiOS directory
      run: cp -r repository /tmp/FeederNet && rm -rf /tmp/FeederNet/os && rm -rf /tmp/FeederNet/admin-client/node_modules && mv /tmp/FeederNet repository/os/modules/feedernet/filesystem/home/pi/FeederNet && ls repository/os/modules/feedernet/filesystem/home/pi/FeederNet

    - name: Build Image
      run: sudo modprobe loop && cd repository/os && sudo bash -x ./build_dist

    - name: Copy Output
      run: cp ${{ github.workspace }}/repository/os/workspace/*-raspbian-buster-lite.img feedernet.img

    - name: Zip Output
      run: gzip feedernet.img
    - uses: actions/upload-artifact@v1
      with:
        name: feedernet.img.gz
        path: feedernet.img.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: FeederNet ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: feedernet.img.gz
        asset_name: feedernet.img.gz
        asset_content_type: application/octet-stream

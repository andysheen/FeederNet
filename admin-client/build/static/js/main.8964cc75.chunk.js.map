{"version":3,"sources":["views/bird-form.js","views/bird-table.js","views/birds.js","views/feeder-form.js","views/feeder-table.js","views/feeders.js","views/event-table.js","App.js","serviceWorker.js","index.js"],"names":["BirdForm","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRfidChange","bind","assertThisInitialized","handleNameChange","handleSubmit","state","birdName","birdRfid","e","setState","target","value","_this2","preventDefault","postData","name","rfid","axios","post","then","res","console","log","data","catch","error","react_default","a","createElement","Row","Col","sm","FormGroup","controlId","ControlLabel","FormControl","type","placeholder","onChange","className","Button","onClick","Component","BirdTable","deleteItem","birds","getBirds","get","response","_this3","map","object","i","key","_id","bsSize","Glyphicon","glyph","itemId","_this4","delete","Table","striped","bordered","condensed","hover","buildRows","Birds","getTest","bird_form","bird_table","FeederForm","handleStubChange","handleLatitudeChange","handleLongitudeChange","feederName","feederStub","feederLatitude","feederLongitude","replace","stub","location","latitude","longitude","lastPing","FeederTable","feeders","getFeeders","Feeders","feeder_form","feeder_table","EventTable","events","getEvents","ip","datetime","App","handleSelect","id","Tabs","activeKey","onSelect","Tab","eventKey","title","event_table","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8964cc75.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, FormControl, ControlLabel, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass BirdForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleRfidChange = this.handleRfidChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      birdName: '',\n      birdRfid: ''\n    };\n  }\n\n  // Handle form changes\n  handleRfidChange(e) {\n    this.setState({ birdRfid: e.target.value });\n  }\n  handleNameChange(e) {\n    this.setState({ birdName: e.target.value });\n  }\n\n  // Handle submit\n  handleSubmit(e) {\n    e.preventDefault();\n    const postData = {\n      name: this.state.birdName,\n      rfid: this.state.birdRfid\n    }\n    axios.post('/api/birds', postData)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          birdName: '',\n          birdRfid: ''\n        })\n        // Also remember to reload data.\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return(\n      <form>\n        <Row>\n          <Col sm={6}>\n            <FormGroup controlId=\"birdName\">\n              <ControlLabel>Bird name</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.birdName}\n                placeholder=\"Apollo\"\n                onChange={this.handleNameChange}\n                />\n            </FormGroup>\n          </Col>\n          <Col sm={6}>\n            <FormGroup controlId=\"birdRfid\">\n              <ControlLabel>RFID tag</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.birdRfid}\n                placeholder=\"123456789\"\n                onChange={this.handleRfidChange}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <div className=\"form-row\">\n          <Button type=\"submit\" onClick={this.handleSubmit}>Add New Bird</Button>\n        </div>\n      </form>\n    );\n  }\n\n}\n\nexport default BirdForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Glyphicon } from 'react-bootstrap';\n\nclass BirdTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteItem = this.deleteItem.bind(this);\n\n    this.state = {\n      birds: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBirds();\n  }\n\n  // GET birds\n  getBirds() {\n    axios.get('/api/birds')\n      .then(response => {\n        this.setState({\n          birds: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // Build table rows\n  buildRows() {\n    return this.state.birds.map((object, i) => {\n      return(\n        <tr key={i}>\n          <td>{object.name}</td>\n          <td>{object.rfid}</td>\n          <td>\n            <Button\n              onClick={() => this.deleteItem(object._id)}\n              bsSize=\"xsmall\"\n              >\n              <Glyphicon glyph=\"remove\"/>\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  deleteItem(itemId) {\n    console.log(\"Delete item with ID \" + itemId);\n    axios.delete('/api/bird/' + itemId)\n      .then(res => {\n        this.getBirds();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return(\n      <Table striped bordered condensed hover>\n        <thead>\n          <tr>\n            <th>Bird Name</th>\n            <th>RFID Tag</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.buildRows()}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default BirdTable;\n","import React, { Component } from 'react';\nimport BirdForm from './bird-form';\nimport BirdTable from './bird-table';\n\nclass Birds extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      getTest: \"\"\n    };\n  }\n\n  render() {\n    return(\n      <div>\n        <br/>\n        <BirdForm/>\n        <br/>\n        <BirdTable/>\n      </div>\n    );\n  }\n}\n\nexport default Birds;\n","import React, { Component } from 'react';\nimport { FormGroup, FormControl, ControlLabel, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass FeederForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleStubChange = this.handleStubChange.bind(this);\n    this.handleLatitudeChange = this.handleLatitudeChange.bind(this);\n    this.handleLongitudeChange = this.handleLongitudeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      feederName: '',\n      feederStub: '',\n      feederLatitude: '',\n      feederLongitude: ''\n    };\n  }\n\n  // Handle form changes\n  handleNameChange(e) {\n    this.setState({\n      feederName: e.target.value,\n      feederStub: e.target.value.replace(/\\s/g,'')\n    });\n  }\n  handleStubChange(e) {\n    this.setState({ feederStub: e.target.value });\n  }\n  handleLatitudeChange(e) {\n    this.setState({ feederLatitude: e.target.value} );\n  }\n  handleLongitudeChange(e) {\n    this.setState({ feederLongitude: e.target.value} );\n  }\n\n  // Handle submit\n  handleSubmit(e) {\n    e.preventDefault();\n    const postData = {\n      stub: this.state.feederStub,\n      name: this.state.feederName,\n      location: {\n        latitude: this.state.feederLatitude,\n        longitude: this.state.feederLongitude\n      },\n      lastPing: 'never'\n    }\n    axios.post('/api/feeders', postData)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          feederName: '',\n          feederStub: '',\n          feederLatitude: '',\n          feederLongitude: ''\n        })\n        // Also remember to reload data.\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return(\n      <form>\n        <Row>\n          <Col sm={6}>\n            <FormGroup controlId=\"feederName\">\n              <ControlLabel>Feeder name</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.feederName}\n                placeholder=\"Feeder 1\"\n                onChange={this.handleNameChange}\n                />\n            </FormGroup>\n          </Col>\n          <Col sm={6}>\n            <FormGroup controlId=\"feederStub\">\n              <ControlLabel>Feeder stub</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.feederStub}\n                placeholder=\"123456789\"\n                onChange={this.handleStubChange}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6}>\n            <FormGroup controlId=\"latitude\">\n              <ControlLabel>Latitude</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.feederLatitude}\n                placeholder=\"50.0000\"\n                onChange={this.handleLatitudeChange}\n                />\n            </FormGroup>\n          </Col>\n          <Col sm={6}>\n            <FormGroup controlId=\"longitude\">\n              <ControlLabel>Longitude</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.state.feederLongitude}\n                placeholder=\"-1.0000\"\n                onChange={this.handleLongitudeChange}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <div className=\"form-row\">\n          <Button type=\"submit\" onClick={this.handleSubmit}>Add New Feeder</Button>\n        </div>\n      </form>\n    );\n  }\n\n}\n\nexport default FeederForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Glyphicon } from 'react-bootstrap';\n\nclass FeederTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteItem = this.deleteItem.bind(this);\n\n    this.state = {\n      feeders: []\n    };\n  }\n\n  componentDidMount() {\n    this.getFeeders();\n  }\n\n  // GET birds\n  getFeeders() {\n    axios.get('/api/feeders')\n      .then(response => {\n        this.setState({\n          feeders: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // Build table rows\n  buildRows() {\n    return this.state.feeders.map((object, i) => {\n      return(\n        <tr key={i}>\n          <td>{object.name}</td>\n          <td>{object.stub}</td>\n          <td>{object.location.latitude}</td>\n          <td>{object.location.longitude}</td>\n          <td>{object.lastPing}</td>\n          <td>\n            <Button\n              onClick={() => this.deleteItem(object._id)}\n              bsSize=\"xsmall\"\n              >\n              <Glyphicon glyph=\"remove\"/>\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  deleteItem(itemId) {\n    console.log(\"Delete item with ID \" + itemId);\n    axios.delete('/api/feeder/' + itemId)\n      .then(res => {\n        this.getFeeders();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return(\n      <Table striped bordered condensed hover>\n        <thead>\n          <tr>\n            <th>Feeder Name</th>\n            <th>Feeder Stub</th>\n            <th>Latitude</th>\n            <th>Longitude</th>\n            <th>Last Ping</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.buildRows()}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default FeederTable;\n","import React, { Component } from 'react';\nimport FeederForm from './feeder-form';\nimport FeederTable from './feeder-table';\n\nclass Feeders extends Component {\n  render() {\n    return(\n      <div>\n        <br/>\n        <FeederForm/>\n        <br/>\n        <FeederTable/>\n      </div>\n    );\n  }\n}\n\nexport default Feeders;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Glyphicon } from 'react-bootstrap';\n\nclass EventTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteItem = this.deleteItem.bind(this);\n\n    this.state = {\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  // GET birds\n  getEvents() {\n    axios.get('/api/events')\n      .then(response => {\n        this.setState({\n          events: response.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  // Build table rows\n  buildRows() {\n    return this.state.events.map((object, i) => {\n      return(\n        <tr key={i}>\n          <td>{object.type}</td>\n          <td>{object.ip}</td>\n          <td>{object.datetime}</td>\n          <td>\n            <Button\n              onClick={() => this.deleteItem(object._id)}\n              bsSize=\"xsmall\"\n              >\n              <Glyphicon glyph=\"remove\"/>\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  deleteItem(itemId) {\n    console.log(\"Delete item with ID \" + itemId);\n    axios.delete('/api/event/' + itemId)\n      .then(res => {\n        this.getEvents();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        <br/>\n        <Table striped bordered condensed hover>\n          <thead>\n            <tr>\n              <th>Event Type</th>\n              <th>IP Address</th>\n              <th>Date and Time</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.buildRows()}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default EventTable;\n","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Birds from './views/birds';\nimport Feeders from './views/feeders';\nimport EventTable from './views/event-table';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      key: 1\n    };\n  }\n\n  handleSelect(key) {\n    this.setState({key});\n  }\n\n  render() {\n    return (\n      <div id=\"App\" className=\"container\">\n        <h1>FeederNet Admin</h1>\n        <br/>\n        <Tabs\n          activeKey={this.state.key}\n          onSelect={this.handleSelect}\n          id=\"main-tabs\"\n        >\n          <Tab eventKey={1} title=\"Birds\">\n            <Birds/>\n          </Tab>\n          <Tab eventKey={2} title=\"Feeders\">\n            <Feeders/>\n          </Tab>\n          <Tab eventKey={3} title=\"Events\">\n            <EventTable/>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}